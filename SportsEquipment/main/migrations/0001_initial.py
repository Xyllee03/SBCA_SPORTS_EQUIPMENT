# Generated by Django 5.1.7 on 2025-04-07 16:04

import django.contrib.auth.base_user
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='StudentBorrow',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('student_no', models.IntegerField()),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('code_request', models.CharField(blank=True, max_length=20, null=True)),
                ('request_status', models.CharField(choices=[('pending', 'Pending'), ('approve', 'Approve'), ('denied', 'Denied')], default='pending', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='ItemRequest',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('equipment_name', models.CharField(max_length=255)),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('id_student_borrow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.studentborrow')),
            ],
        ),
        migrations.CreateModel(
            name='UserSites',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('ID', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('password', models.CharField(max_length=255)),
                ('username', models.CharField(max_length=255)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, related_name='user_sites', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='user_sites_permissions', to='auth.permission')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, django.contrib.auth.base_user.BaseUserManager),
        ),
    ]
